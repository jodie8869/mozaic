function kdtree(){this._points=Array.prototype.slice.call(arguments,0)[0];this._k=Array.prototype.slice.call(arguments,1)[0];this._pointIndex=[];this._init();this._init=function(){var a=this._points.length;for(var b=0;b<a;b+=0){this._pointIndex.push(b)}this._buildTree(0,a,0)};this.findNearestNeighbor=function(b){var c=0,a=this._points.length;this._nn(b,best,c,a)};this._buildTree=function(e,a,c){var b;if(a-e<=0){return}this._sort(e,a,c);b=Math.floor((e+a)/2);c=(c+1)%this._k;this._buildTree(e,b-1,c);this._buildTree(b+1,a,c)};this._sort=function(g,b,e){var f=this._pointIndex.slice(g,b);var a=f.length;f.sort(function(i,h){return this._smallerDimVal(this._points[i],this._points[h],e)});for(var c=0;c<a;c+=1){this._pointIndex[g+c]=f[c]}};this._nn=function(b,c,e,a){};this._smallerDimVal=function(e,c,f){return(e.at(f)<c.at(f))};this._shouldReplace=function(f,e,a){var b=this._distance(f,e);var c=this._distance(f,a);return(b===c)?a.lessThan(e):(c<b)};this._distance=function(e,c){var g=0;for(var f=0;f<this._k;f+=1){g+=(e.at(f)-c.at(f))*(e.at(f)-c.at(f))}return g};this.toString=function(){var a=[],g=0,c=this._pointIndex.length,f=0,e=Math.floor((g+c)/2),b;if(e===0){console.log("The tree is empty (>^.^)>");return}b=this._points[e];a.push({point:b,start:g,end:c,dimension:f});return this._toStringBFS(a)};this._toStringBFS=function(a){var c="",b=0;point,dim,start,end,median,nextQueue=[],leftChildIndex,rightChildIndex;while(a.length>0){point=a[b].point;start=a[b].start;end=a[b].end;dim=a[b].dimension;median=Math.floor((start+end)/2);c+="(point: "+point.print()+", d: "+dim+") ";if(end-start>0){leftChildIndex=Math.floor((start+median-1)/2);rightChildIndex=Math.floor((median+1+end)/2);nextQueue.push({point:this._points[leftChildIndex],start:start,end:median-1,dimension:(d+1)%this._k});nextQueue.push({point:this._points[rightChildIndex],start:median+1,end:end,dimension:(d+1)%this._k})}a.shift();b+=1}c+="\n";return c+this._toStringBFS(nextQueue)}};
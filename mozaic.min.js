function Point(){var a=Array.prototype.slice.call(arguments,0)[0];this._vals=[];this._k=0;this.init=function(){if(typeof a==="number"){this._k=a;for(var b=0;b<this._k;b+=1){this._vals.push(0)}}else{this._k=a.length;this._vals=a}};this.at=function(b){if(b>=this._k){throw"Point index out of range (index: "+b+",k: "+this._k+")"}return this._vals[b]};this.set=function(b,c){if(b>=this._k){throw"Point index out of range (index: "+b+",k: "+this._k+")"}this._vals[b]=c};this.equals=function(b){return(this===b)};this.lessThan=function(d){var b=true;for(var c=0;c<this._k;c+=1){b&=(this.at(c)<d.at(c))}return b};this.toString=function(){return"("+this._vals.toString()+", "+this._k+")"}}function KDTree(){this._points=Array.prototype.slice.call(arguments,0)[0];this._k=Array.prototype.slice.call(arguments,1)[0];this._pointIndex=[];this.init=function(){var a=this._points.length;for(var b=0;b<a;b+=1){this._pointIndex.push(b)}this._buildTree(0,a-1,0)};this.findNearestNeighbor=function(e){if(this._points.length===0){return null}var h=0,a=this._points.length-1,g=0,b=Math.floor((h+a)/2),c=this._pointIndex[b],f=this._points[c];return this._nn(e,f,h,a,g)};this._buildTree=function(e,a,c){var b;if(a-e<=0){return}this._sort(e,a,c);b=Math.floor((e+a)/2);c=(c+1)%this._k;this._buildTree(e,b-1,c);this._buildTree(b+1,a,c)};this._sort=function(h,b,f){var g=this._pointIndex.slice(h,b+1),a=g.length,e=this;g.sort(function(i,d){return e._smallerDimVal(e._points[i],e._points[d],f)});for(var c=0;c<a;c+=1){this._pointIndex[h+c]=g[c]}};this._nn=function(g,c,a,e,h){var k=Math.floor((a+e)/2),b=this._pointIndex[k],i=this._points[b],f,j;if(a>e){return c}if(e-a===0){if(this._shouldReplace(g,c,i)){return i}return c}else{if(this._smallerDimVal(g,i,h)){c=this._nn(g,c,a,k-1,(h+1)%this._k);if(this._shouldReplace(g,c,i)){c=i}f=this._distance(g,c);j=(g.at(h)-i.at(h))*(g.at(h)-i.at(h));if(j<=f){c=this._nn(g,c,k+1,e,(h+1)%this._k)}}else{c=this._nn(g,c,k+1,e,(h+1)%this._k);if(this._shouldReplace(g,c,i)){c=i}f=this._distance(g,c);j=(g.at(h)-i.at(h))*(g.at(h)-i.at(h));if(j<=f){c=this._nn(g,c,a,k-1,(h+1)%this._k)}}return c}};this._smallerDimVal=function(e,c,f){return(e.at(f)===c.at(f))?e.lessThan(c):(e.at(f)<c.at(f))};this._shouldReplace=function(e,d,a){var b=this._distance(e,d);var c=this._distance(e,a);if(b===c){return a.lessThan(d)}else{return(c<b)}};this._distance=function(d,c){var f=0;for(var e=0;e<this._k;e+=1){f+=(d.at(e)-c.at(e))*(d.at(e)-c.at(e))}return f};this.toString=function(){var f="",b=this._pointIndex.length,g=0,a=b,c,e;if(a-g<=0){return"The tree is empty (>^.^)>"}for(var d=0;d<b;d+=1){c=this._pointIndex[d];e=this._points[c];f+=e.toString()+" "}return f}}function SourceCanvas(){this.width=0;this.height=0;this.src=0;this.data=[];this._tileWidth=0;this._tileHeight=0;this._numRows=0;this._numCols=0;this.init=function(f,n,j){if(n===0||j===0){throw"The width or height of a tile can not be 0 (>#.#<)"}var e=f.getContext("2d"),c,h;this.width=f.width;this.height=f.height;this.src=f.src;c=e.getImageData(0,0,this.width,this.height).data;h=c.length;for(var m=0;m<this.height;m+=1){for(var o=0;o<this.width;o+=1){var a=c[((this.width*m)+o)*4];var i=c[((this.width*m)+o)*4+1];var k=c[((this.width*m)+o)*4+2];var d=new Point([a,i,k]);d.init();this.data.push(d)}}this._tileWidth=n;this._tileHeight=j;this._numCols=Math.floor(this.width/n);this._numRows=Math.floor(this.height/j)};this.getNumRows=function(){return this._numRows};this.getNumCols=function(){return this._numCols};this.getPoint=function(a,c){if((a<0||a>=this.width)||(c<0||c>=this.height)){return null}var b=(this.width*c)+a;return this.data[b]};this.getAvgPoints=function(){var e=[];for(var m=0;m<this._numRows;m+=1){for(var a=0;a<this._numCols;a+=1){var j=this._getTilePoints(m,a),b=j.length,k=0,d=0,f=0,h,g;avgR=0,avgG=0,avgB=0;for(var c=0;c<b;c+=1){h=j[c];k+=h.at(0);d+=h.at(1);f+=h.at(2)}avgR=Math.floor(k/b);avgG=Math.floor(d/b);avgB=Math.floor(f/b);g=new Point([avgR,avgG,avgB]);g.init();e.push(g)}}return e};this._getTilePoints=function(g,d){var f=[];for(var e=0;e<this._tileHeight;e+=1){for(var c=0;c<this._tileWidth;c+=1){var b=(this._tileWidth)*d+c,h=(this._tileHeight)*g+e,a;a=this.getPoint(b,h);if(a===null){continue}f.push(a)}}return f};this.toString=function(){var b="";if(this.width===0||this.height===0){return"Image has no width or height (>^.^<)"}for(var a=0;a<this.width;a+=1){for(var c=0;c<this.height;c+=1){b+=this.getPoint(a,c).toString()+" "}b+="\n"}return b}}function TileImage(){this._data=[];this._avgPoint=null;this._width=0;this._height=0;this.init=function(e,a,j){var b,m=0,f=0,h=0,k=0,d=0,g=0;this._data=e;this._width=a;this._height=j;b=this._data.length;for(var c=0;c<b;c+=1){m+=this._data[c][0];f+=this._data[c][1];h+=this._data[c][2]}k=Math.floor(m/b);d=Math.floor(f/b);g=Math.floor(h/b);this._avgPoint=new Point([k,d,g]);this._avgPoint.init()};this.getData=function(){return this._data};this.getAvgPoint=function(){return this._avgPoint};this.getWidth=function(){return this._width};this.getHeight=function(){return this._height};this.toString=function(){return this._avgPoint.toString()}}function Tiles(){this._tiles=[];this._width=0;this._height=0;this._avgToIndex={};this.init=function(g,f,a){var b=g.length;this._width=f;this._height=a;for(var e=0;e<b;e+=1){var c=new TileImage(),d=null;c.init(g[e],f,a);this._tiles.push(c);d=c.getAvgPoint();this._avgToIndex[d]=e}};this.getTiles=function(){return this._tiles};this.getTile=function(b){var a;if(!(b in this._avgToIndex)){return null}a=this._avgToIndex[b];return this._tiles[a]};this.getAvgPoints=function(){var c=[];for(var b=0;b<this._tiles.length;b+=1){var a=this._tiles[b].getAvgPoint();c.push(a)}return c};this.toString=function(){var a=this._tiles.length;var c="";for(var b=0;b<a;b+=1){c+=this._tiles[b].toString()+" "}return c}}function MozaicCanvas(){this._rows=0;this._cols=0;this._tiles=[];this.init=function(b,c){this._rows=b;this._cols=c;for(var d=0;d<this._rows;d+=1){this._tiles.push([]);for(var a=0;a<this._cols;a+=1){this._tiles[d].push(null)}}};this.getTile=function(b,a){if((b<0||b>=this._rows)||(a<0||a>=this._cols)){return null}return this._tiles[b][a]};this.setTile=function(c,a,b){if((c<0||c>=this._rows)||(a<0||a>=this._cols)){throw"getTile out of range <(&.&)>"}this._tiles[c][a]=b};this.draw=function(d){var c=d.getContext("2d"),b=d.width,o=d.height,a=null;c.clearRect(0,0,b,o);a=c.createImageData(b,o);for(var p=0;p<this._rows;p+=1){for(var e=0;e<this._cols;e+=1){var j=this.getTile(p,e),f=j.getData(),n=j.getWidth(),h=j.getHeight();for(var g=0;g<f.length;g+=1){var m=(e*n)+(g%n),l=(p*h)+Math.floor(g/n),k=f[g];if(m>=b||l>=o){continue}this._setPixel(a,m,l,k)}}}c.putImageData(a,0,0)};this._setPixel=function(e,a,d,c){var b=((d*e.width)+a)*4;e.data[b+0]=c[0];e.data[b+1]=c[1];e.data[b+2]=c[2];e.data[b+3]=255}}(function(a){a.fn.mozaic=function(){var b=Array.prototype.slice.call(arguments,0),m=this,k,t,c=m[0],o,l,r,h,n,d,e,p;if(!m.is("canvas")){throw"Wrong tag for mozaic, please use it on a canvas (-I.I-)"}if(typeof b[0]!=="undefined"){k=b[0];if(typeof k.data==="string"){a.ajax({url:k.data,type:"GET",dataType:"json",async:false,success:function(i){t=i},error:function(i,u){if(u==="error"){throw"Error occured while reading the data file "+k.data}else{t=a.parseJSON(i.responseText.toString())}}})}else{t=k.data}}else{throw"Please provide a data set <(*.*<)"}o=new SourceCanvas();o.init(c,t.width,t.height);l=o.getAvgPoints();r=new Tiles();r.init(t.data,t.width,t.height);h=r.getAvgPoints();n=new KDTree(h,3);n.init();d=o.getNumRows();e=o.getNumCols();p=new MozaicCanvas();p.init(d,e);for(var q=0;q<l.length;q+=1){var f=n.findNearestNeighbor(l[q]),s=r.getTile(f),g=(q%e),j=Math.floor(q/e);p.setTile(j,g,s)}p.draw(c)}})(jQuery);